buildscript {
    ext {
        kotlinVersion = '1.3.41'
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

plugins {
    id 'com.gorylenko.gradle-git-properties' version '1.4.21'
    id 'com.google.cloud.tools.jib' version '1.4.0'
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
mainClassName='com.example.demo.DemoApplicationKt'

springBoot {
    buildInfo()
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    runtime('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

project.ext {
    image = project.properties.getOrDefault('image', project.name)
//    dnsName = project.properties.getOrDefault('dnsName', project.name)
//    envFile = project.properties.getOrDefault('envFile', project.name)
}

jib {
    to {
        image = project.image
        tags = [project.version.toString(), 'latest']
        auth {
            username = OCIR_USERNAME
            password = OCIR_PASSWORD
        }
    }

    container {
        ports = ["8080"]
        jvmFlags = ['-Des.set.netty.runtime.available.processors=false']
    }
}